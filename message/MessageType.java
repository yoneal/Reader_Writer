//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, vJAXB 2.1.10 in JDK 6 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2010.10.01 at 09:31:05 AM PHT 
//


package reader_writer.message;

import javax.xml.bind.annotation.XmlEnum;
import javax.xml.bind.annotation.XmlEnumValue;
import javax.xml.bind.annotation.XmlType;


/**
 * <p>Java class for MessageType.
 * 
 * <p>The following schema fragment specifies the expected content contained within this class.
 * <p>
 * <pre>
 * &lt;simpleType name="MessageType">
 *   &lt;restriction base="{http://www.w3.org/2001/XMLSchema}string">
 *     &lt;enumeration value="Beacon"/>
 *     &lt;enumeration value="Echo"/>
 *     &lt;enumeration value="Leave"/>
 *     &lt;enumeration value="WriteRequest"/>
 *     &lt;enumeration value="WriteResponse"/>
 *     &lt;enumeration value="ReadRequest"/>
 *     &lt;enumeration value="ReadResponse"/>
 *     &lt;enumeration value="Release"/>
 *     &lt;enumeration value="Ack"/>
 *   &lt;/restriction>
 * &lt;/simpleType>
 * </pre>
 * 
 */
@XmlType(name = "MessageType")
@XmlEnum
public enum MessageType {

    @XmlEnumValue("Beacon")
    BEACON("Beacon"),
    @XmlEnumValue("Echo")
    ECHO("Echo"),
    @XmlEnumValue("Leave")
    LEAVE("Leave"),
    @XmlEnumValue("WriteRequest")
    WRITE_REQUEST("WriteRequest"),
    @XmlEnumValue("WriteResponse")
    WRITE_RESPONSE("WriteResponse"),
    @XmlEnumValue("ReadRequest")
    READ_REQUEST("ReadRequest"),
    @XmlEnumValue("ReadResponse")
    READ_RESPONSE("ReadResponse"),
    @XmlEnumValue("Release")
    RELEASE("Release"),
    @XmlEnumValue("Ack")
    ACK("Ack");
    private final String value;

    MessageType(String v) {
        value = v;
    }

    public String value() {
        return value;
    }

    public static MessageType fromValue(String v) {
        for (MessageType c: MessageType.values()) {
            if (c.value.equals(v)) {
                return c;
            }
        }
        throw new IllegalArgumentException(v);
    }

}
